//一个正整数 n 可以表示成若干个正整数之和，形如：
// n = n1 + n2 + n3 + …… + nk,
// 其中 n1 >= n2 >= n3 ……  >= nk, (k >= 1)。
// 我们将这样的一种表示称为正整数 n 的一种划分。
// 现在给定一个正整数 n ，请你求出 n 共有多少种不同的划分方法。

//相当于特殊的完全背包

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double lb;
#define all(x) (x).begin(), (x).end()
#define debug(x){cerr<<#x<<'='<<x<<endl;}
#define endl '\n'
const int N = 1010;
const int mod = 1e9 + 7;
ll dp[N];
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    dp[0] = 1;
    for(int i = 1; i <= n;i ++)
    {
        for(int j = i; j <= n; j++)
        {
            dp[j] = (dp[j] + dp[j - i]) % mod;
        }
    }
    cout << dp[n];
    return 0;
}