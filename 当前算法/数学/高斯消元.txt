#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double lb;
#define all(x) (x).begin(), (x).end()
#define debug(x){cerr<<#x<<'='<<x<<endl;}
#define endl '\n'



int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout<<fixed<<setprecision(2);
    int n;
    cin >> n;
    vector<vector<double>>A(n+2,vector<double>(n+2));
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j <= n + 1; j++)
        {
            cin >> A[i][j];
        }
    }

    for(int j = 1; j <= n; j++)
    {
        int i;
        for(i = j; i <= n; i++)
        {
            if(fabs(A[i][j]) > 1e-8) break;
        }
        if(fabs(A[i][j]) <= 1e-8) // 无解的情况
        {
            cout << "No Solution";
            return 0;
        }
        for(int k = 1; k <= n + 1; k++) // 把非0元素所在行交换到当前行
            swap(A[i][k],A[j][k]);
        for(int k = n + 1; k >= j; k--) // 把当前行除以A[j][j]，令A[j][j]归一
            A[j][k] /= A[j][j];
        for(int i = 1; i <= n; i++)
        {
            if(i != j)
            {
                for(int k = n + 1; k >= j; k--)
                {
                    A[i][k] -= A[j][k] * A[i][j];
                }
            }
        }
    }
    // for(int i = 1; i <= n; i++)
    // {
    //     for(int j = 1; j <= n + 1; j++)
    //     {
    //         cout << fabs(A[i][j]) << ' ';
    //     }
    //     cout << endl;
    // }
    for(int i = 1; i <= n ;i++)
    {
        cout << A[i][n + 1] << endl;
    }

    return 0;
}